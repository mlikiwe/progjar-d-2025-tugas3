FILE SERVER
TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:
- client harus mengirimkan request dalam bentuk string
- string harus dalam format
  REQUEST spasi PARAMETER
- PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya

REQUEST YANG DILAYANI:
- informasi umum:
  * Jika request tidak dikenali akan menghasilkan pesan
    - status: ERROR
    - data: request tidak dikenali
  * Semua result akan diberikan dalam bentuk JSON dan diakhiri
    dengan character ascii code #13#10#13#10 atau "\r\n\r\n"

LIST
* TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
* PARAMETER: tidak ada
* RESULT:
- BERHASIL:
  - status: OK
  - data: list file
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

GET
* TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : isi file yang diminta (dalam bentuk base64)
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

UPLOAD
* TUJUAN: untuk mengunggah file dari client ke server dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
  - PARAMETER2 : isi file dengan encode base64
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang berhasil diunggah
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

    Perintah "UPLOAD" ini digunakan oleh client untuk mengirimkan sebuah file ke server agar dapat disimpan di dalam folder files. Request atau perintah ini membutuhkan dua parameter, yaitu nama file dan isi dari file tersebut yang telah di-encode dengan base64 sesuai dengan ketentuan. Untuk isi dari file akan otomatis di generate oleh fungsi yang ada di script. Setelah server menerima dan berhasil menyimpan file, maka akan dikirimkan respon dengan status OK dan nama file yang berhasil diunggah. Namun, apabila terjadi sebuah kesalahan, seperti kurangnya parameter atau proses decoding yang gagal, maka server akan merespons dengan status "ERROR" dan pesan kesalahan yang sesuai.

DELETE
* TUJUAN: untuk menghapus file dari file server dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data: pesan konfirmasi bahwa file berhasil dihapus 
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

  Perintah "DELETE" memungkinkan client untuk menghapus file yang ada di folder files di server. Parameter yang direrima oleh request ini adalah nama file yang ingin dihapus. Server lalu akan melakukan pengecekan apakah file tersebut tersedia, apabila ditemukan, maka akan dilakukan penghapusan dari sistem penyimpanan. Setelah proses penghapusan berhasil, server akan mengirimkan respon dengan status OK beserta pesan konfirmasi. Namun, apabila terjadi sebuah kesalahan, seperti file tidak ditemukan atau kesalahan lain, server akan memberikan respons berupa status ERROR dan pesan kesalahan.